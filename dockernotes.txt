													Docker(wrtten in Go)
Docker registry:
		Docker registry stores docker images.
		
Objects of Docker are Image,Container..etc.													
Image:
		An image is a read-only template with instructions for creating a Docker container. Often, an image is based on another image, with some additional customization.

Container:

		A container is a runnable instance of an image.
		
		A container is defined by its image as well as any configuration options you provide to it when you create or start it. When a container is removed, any changes to its state that are not stored in persistent storage disappear.


Explaination:
		
		Image-----it is like a class in java.
		Container-----it is like creating an object to that class in java.

		You can create many object for a class.Similarly we can create many container using that one image
		
+++++++++++++++++++++++++++++++++++++++++++++++++++Docker Basics Explaination++++++++++++++++++++++++++++++++++++++++++++++++++

youtube link ==> https://youtu.be/iqqDU2crIEQ

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

++++++++++++++++++++++++++++++++++++++Docker Basic Commands:++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

command to create an image ==> 
							docker build --tag imagename .(Dockerfilelocation)
							
command to create container ==> 
					docker run --name containername imagename(docker run --publish (browserport)8000:8080(port of container) --detach(to run the process in backgroud) --name bb bulletinboard:1.0)
					
					https://docs.docker.com/get-started/part2/

docker rmi imagename
docker rm containername
docker ps --all 
docker ps           ==> ps-processes
docker stop cotainername
docker start containername

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

++++++++++++++++++++++++++++++++++++++++++++++++Docker File Example+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# Use the official image as a parent image.
FROM node:current-slim

# Set the working directory.
WORKDIR /usr/src/app

# Copy the file from your host to your current location.
COPY package.json .

# Run the command inside your image filesystem.
RUN npm install

# Inform Docker that the container is listening on the specified port at runtime.
EXPOSE 8080

# Run the specified command within the container.
CMD [ "npm", "start" ]

# Copy the rest of your app's source code from your host to your image filesystem.
COPY . .

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




